<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="wW)_tteV)QLMDw{;wpF`">angle</variable><variable id="~890;69F21v.:e[0a#-(">radius</variable><variable id="@ok-9s7EY3vwnG;pa:ZB">cx</variable><variable id="xfcqu7USMnBnw(M6=WXs">cy</variable><variable id="?K$8h.Zsb8h@u;JBqwcC">mySprite</variable></variables><block type="pxt-on-start" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let angle = 0" numlines="1" declaredvars="angle"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class Platform extends sprites.BaseSprite {" line1="    public map: Image;" line2="    public left: Fx8;" line3="    public top: Fx8;" line4="    public vx: Fx8;" line5="    public vy: Fx8;" line6="    protected riders: Sprite[];" line7="    protected lastLeft: number;" line8="    protected lastTop: number;" line9="" line10="    constructor(map: Image, left: number, top: number) {" line11="        super(1);" line12="" line13="        this.map = map;" line14="        this.left = Fx8(left);" line15="        this.top = Fx8(top);" line16="" line17="        this.lastLeft = left;" line18="        this.lastTop = top;" line19="" line20="        this.vx = Fx8(0);" line21="        this.vy = Fx8(0);" line22="" line23="        this.riders = [];" line24="    }" line25="" line26="    __drawCore(camera: scene.Camera) {" line27="        screen.drawTransparentImage(" line28="            this.map," line29="            Fx.toInt(this.left)," line30="            Fx.toInt(this.top)," line31="        );" line32="    }" line33="" line34="    addRider(rider: Sprite) {" line35="        if (this.riders.indexOf(rider) === -1)" line36="            this.riders.push(rider);" line37="    }" line38="" line39="    move(dx: Fx8, dy: Fx8) {" line40="        this.left = Fx.add(this.left, dx);" line41="        this.top = Fx.add(this.top, dy);" line42="" line43="        const dx2 = Fx.toInt(this.left) - this.lastLeft;" line44="        const dy2 = Fx.toInt(this.top) - this.lastTop;" line45="" line46="        if (dx2 || dy2) {" line47="            this.lastLeft = Fx.toInt(this.left);" line48="            this.lastTop = Fx.toInt(this.top);" line49="" line50="            if (this.riders.length) {" line51="                for (const r of this.riders) {" line52="                    if (dx2) r._x = Fx8(r.left + dx2);" line53="                    if (dy2) r._y = Fx8(r.top + dy2)" line54="                }" line55="            }" line56="        }" line57="    }" line58="" line59="    setVelocity(vx: number, vy: number) {" line60="        this.vx = Fx8(vx);" line61="        this.vy = Fx8(vy);" line62="    }" line63="}" numlines="64"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="const p = new Platform(img`" line1="    . 9 9 7 ." line2="    9 9 9 7 7" line3="    9 7 9 9 7" line4="    9 9 9 9 9" line5="    . 9 9 9 ." line6="`, 0, 0);" numlines="7" declaredvars="p"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let px: Fx8;" numlines="1" declaredvars="px"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let py: Fx8;" numlines="1" declaredvars="py"></mutation><next><block type="variables_set"><field name="VAR" id="~890;69F21v.:e[0a#-(">radius</field><value name="VALUE"><shadow type="math_number"><field name="NUM">50</field></shadow></value><next><block type="variables_set"><field name="VAR" id="@ok-9s7EY3vwnG;pa:ZB">cx</field><value name="VALUE"><shadow type="math_number"><field name="NUM">80</field></shadow></value><next><block type="variables_set"><field name="VAR" id="xfcqu7USMnBnw(M6=WXs">cy</field><value name="VALUE"><shadow type="math_number"><field name="NUM">60</field></shadow></value><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="p.left = Fx8(cx - 12 + (radius * Math.cos(angle * Math.PI / 180)));" numlines="1"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="p.top = Fx8(cy - 4 + (radius * Math.sin(angle * Math.PI / 180)));" numlines="1"></mutation><next><block type="variables_set"><field name="VAR" id="?K$8h.Zsb8h@u;JBqwcC">mySprite</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="spritescreate"><value name="img"><shadow type="screen_image_picker"><field name="img">img`
. 5 5 5 . 
5 5 5 5 5 
4 4 5 5 5 
5 5 5 4 4 
. 5 5 5 . 
`</field></shadow></value></block></value><next><block type="run_image_animation"><value name="sprite"><block type="variables_get"><field name="VAR" id="?K$8h.Zsb8h@u;JBqwcC">mySprite</field></block></value><value name="frames"><block type="animation_editor"><field name="frames">[img`
. 4 5 5 . 
5 5 5 5 5 
5 5 5 5 5 
5 5 5 4 5 
. 5 5 4 . 
`,img`
. 4 5 5 . 
5 4 5 5 5 
5 5 5 5 5 
5 5 5 5 5 
. 5 5 4 . 
`]</field></block></value><value name="frameInterval"><shadow type="timePicker"><field name="ms">100</field></shadow></value><value name="loop"><shadow type="toggleOnOff"><field name="on">true</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="gameupdate" x="508" y="0"><statement name="HANDLER"><block type="variables_change"><field name="VAR" id="wW)_tteV)QLMDw{;wpF`">angle</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0.5</field></shadow></value><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="px = Fx8(cx - 12 + (radius * Math.cos(angle * Math.PI / 180)));" numlines="1"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="py = Fx8(cy - 4 + (radius * Math.sin(angle * Math.PI / 180)));" numlines="1"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="p.move(Fx.sub(px, p.left), Fx.sub(py, p.top));" numlines="1"></mutation><comment id="undefined" pinned="false" h="80" w="160">Must call move and not modify left/top directly</comment></block></next></block></next></block></next></block></statement></block></xml>